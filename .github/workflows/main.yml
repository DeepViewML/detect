name: Main

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    container:
      image: debian:buster
    env:
      BUILD_TYPE: Release
    steps:
    - uses: actions/checkout@v3

    - name: Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        apt-get update
        apt-get install -y --no-install-recommends ca-certificates curl gpg make gcc g++
        curl https://deepviewml.com/apt/key.pub | gpg --dearmor -o /usr/share/keyrings/deepviewml.gpg
        echo 'deb [signed-by=/usr/share/keyrings/deepviewml.gpg] https://deepviewml.com/apt stable main' > /etc/apt/sources.list.d/deepviewml.list
        apt-get update
        apt-get install -y --no-install-recommends libvideostream-dev libvaal-dev libdeepview-rt-dev libzmq3-dev

    - name: Dependencies (aarch64)
      if: matrix.arch == 'aarch64'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        dpkg --add-architecture arm64
        apt-get update
        apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libvideostream:arm64 libvaal:arm64 libdeepview-rt:arm64 libzmq5:arm64 libzmq3-dev:arm64

    - name: Build
      run: make CXX=${{ matrix.arch }}-linux-gnu-g++ APP=detect-linux-${{ matrix.arch }}

    - name: Cache Binary
      id: detect
      uses: actions/cache@v3
      with:
        path: detect-linux-${{ matrix.arch }}
        key: detect-${{ github.sha }}

  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    steps:
    - name: Load Binary
      id: detect
      uses: actions/cache@v3
      with:
        path: detect-linux-x86_64, detect-linux-aarch64
        key: detect-${{ github.sha }}
        fail-on-cache-miss: true
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: detect-linux-x86_64, detect-linux-aarch64
